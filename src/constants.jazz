/* This file is autogenerated by constants.py */

/* Loads the modulus.
It returns the value p = 32317006071311007300338913926423828248817941241140239112842009751400741706634354222619689417363569347117901737909704191754605873209195028853758986185622153212175412514901774520270235796078236248884246189477587641105928646099411723245426622522193230540919037680524235519125679715870117001058055877651038861847280257976054903569732561526167081339361799541336476559160368317896729073178384589680639671900977202194168647225871031411336429319536193471636533209717077448227988588565369208645296636077250268955505928362751121174096972998068410554359584866583291642136218231078990999448652468262416972035911852507045361090559.
*/
inline fn bn_set_p(stack u64[32] p) -> stack u64[32] {
  reg u64 tmp;
  tmp = 18446744073709551615; p[0] = tmp;
  tmp = 1545454141666273896; p[1] = tmp;
  tmp = 1572361106993317136; p[2] = tmp;
  tmp = 4149303432552213221; p[3] = tmp;
  tmp = 16009113560346531608; p[4] = tmp;
  tmp = 13097978378517762761; p[5] = tmp;
  tmp = 11180049335738409615; p[6] = tmp;
  tmp = 16401677924195796483; p[7] = tmp;
  tmp = 3643515754058796603; p[8] = tmp;
  tmp = 17398650045445185916; p[9] = tmp;
  tmp = 7425368496004700164; p[10] = tmp;
  tmp = 11445099139962410605; p[11] = tmp;
  tmp = 2045464732017971899; p[12] = tmp;
  tmp = 9468076200223288726; p[13] = tmp;
  tmp = 7572309818504171359; p[14] = tmp;
  tmp = 11014195235928789914; p[15] = tmp;
  tmp = 13979310375781515013; p[16] = tmp;
  tmp = 5271575865889938237; p[17] = tmp;
  tmp = 12582815541414797286; p[18] = tmp;
  tmp = 17165588707022577573; p[19] = tmp;
  tmp = 864511594326308845; p[20] = tmp;
  tmp = 17603518614767922539; p[21] = tmp;
  tmp = 16466767132611215046; p[22] = tmp;
  tmp = 5755940542857986629; p[23] = tmp;
  tmp = 3470879405153129527; p[24] = tmp;
  tmp = 17263733006627652379; p[25] = tmp;
  tmp = 5857503583518590173; p[26] = tmp;
  tmp = 147421033984662306; p[27] = tmp;
  tmp = 2955010104097229940; p[28] = tmp;
  tmp = 14179128828124470481; p[29] = tmp;
  tmp = 14488038916154245684; p[30] = tmp;
  tmp = 18446744073709551615; p[31] = tmp;
  return p;
}

/* Loads the order of the generator.
It returns the value q = 16158503035655503650169456963211914124408970620570119556421004875700370853317177111309844708681784673558950868954852095877302936604597514426879493092811076606087706257450887260135117898039118124442123094738793820552964323049705861622713311261096615270459518840262117759562839857935058500529027938825519430923640128988027451784866280763083540669680899770668238279580184158948364536589192294840319835950488601097084323612935515705668214659768096735818266604858538724113994294282684604322648318038625134477752964181375560587048486499034205277179792433291645821068109115539495499724326234131208486017955926253522680545279.
*/
inline fn bn_set_q(stack u64[32] q) -> stack u64[32] {
  reg u64 tmp;
  tmp = 9223372036854775807; q[0] = tmp;
  tmp = 772727070833136948; q[1] = tmp;
  tmp = 10009552590351434376; q[2] = tmp;
  tmp = 2074651716276106610; q[3] = tmp;
  tmp = 17227928817028041612; q[4] = tmp;
  tmp = 15772361226113657188; q[5] = tmp;
  tmp = 14813396704723980615; q[6] = tmp;
  tmp = 17424210998952674049; q[7] = tmp;
  tmp = 1821757877029398301; q[8] = tmp;
  tmp = 8699325022722592958; q[9] = tmp;
  tmp = 12936056284857125890; q[10] = tmp;
  tmp = 14945921606835981110; q[11] = tmp;
  tmp = 1022732366008985949; q[12] = tmp;
  tmp = 13957410136966420171; q[13] = tmp;
  tmp = 3786154909252085679; q[14] = tmp;
  tmp = 14730469654819170765; q[15] = tmp;
  tmp = 16213027224745533314; q[16] = tmp;
  tmp = 2635787932944969118; q[17] = tmp;
  tmp = 15514779807562174451; q[18] = tmp;
  tmp = 17806166390366064594; q[19] = tmp;
  tmp = 9655627834017930230; q[20] = tmp;
  tmp = 8801759307383961269; q[21] = tmp;
  tmp = 17456755603160383331; q[22] = tmp;
  tmp = 12101342308283769122; q[23] = tmp;
  tmp = 10958811739431340571; q[24] = tmp;
  tmp = 17855238540168601997; q[25] = tmp;
  tmp = 2928751791759295086; q[26] = tmp;
  tmp = 73710516992331153; q[27] = tmp;
  tmp = 10700877088903390778; q[28] = tmp;
  tmp = 7089564414062235240; q[29] = tmp;
  tmp = 16467391494931898650; q[30] = tmp;
  tmp = 9223372036854775807; q[31] = tmp;
  return q;
}

/* Loads the generator.
It returns the value g = 2.
*/
inline fn bn_set_g(stack u64[32] g) -> stack u64[32] {
  reg u64 tmp;
  tmp = 2; g[0] = tmp;
  tmp = 0; g[1] = tmp;
  tmp = 0; g[2] = tmp;
  tmp = 0; g[3] = tmp;
  tmp = 0; g[4] = tmp;
  tmp = 0; g[5] = tmp;
  tmp = 0; g[6] = tmp;
  tmp = 0; g[7] = tmp;
  tmp = 0; g[8] = tmp;
  tmp = 0; g[9] = tmp;
  tmp = 0; g[10] = tmp;
  tmp = 0; g[11] = tmp;
  tmp = 0; g[12] = tmp;
  tmp = 0; g[13] = tmp;
  tmp = 0; g[14] = tmp;
  tmp = 0; g[15] = tmp;
  tmp = 0; g[16] = tmp;
  tmp = 0; g[17] = tmp;
  tmp = 0; g[18] = tmp;
  tmp = 0; g[19] = tmp;
  tmp = 0; g[20] = tmp;
  tmp = 0; g[21] = tmp;
  tmp = 0; g[22] = tmp;
  tmp = 0; g[23] = tmp;
  tmp = 0; g[24] = tmp;
  tmp = 0; g[25] = tmp;
  tmp = 0; g[26] = tmp;
  tmp = 0; g[27] = tmp;
  tmp = 0; g[28] = tmp;
  tmp = 0; g[29] = tmp;
  tmp = 0; g[30] = tmp;
  tmp = 0; g[31] = tmp;
  return g;
}

/* Loads the barret parameter for p.
It returns the value bp = 32317006071311007301090839450916075672074637894498330470309491614874605269258845429066617750438611497217172998255766216223761011478474532650974905473458381524348224983452534238842699055706528839316900073176359409123413739445397952234623184300460154670470987008412185029124584489601900670931121854398190604800292822877845957165654247519063010445688374293905515743037557007239230573090162415731314434935337651887720640264611889321352234483385341531370885728478742938129783934088697644527630028295616871380503535956364143710134154492766231832072494607343336005619107670188720508364918065676485338559326165037076233303652.
*/
inline fn bn_set_bp(stack u64[64] bp) -> stack u64[64] {
  reg u64 tmp;
  tmp = 5147934117528057444; bp[0] = tmp;
  tmp = 10407519109700454935; bp[1] = tmp;
  tmp = 16583539182667929086; bp[2] = tmp;
  tmp = 1492440688257385106; bp[3] = tmp;
  tmp = 10066832793016919264; bp[4] = tmp;
  tmp = 11339370997029172680; bp[5] = tmp;
  tmp = 4675869585930362320; bp[6] = tmp;
  tmp = 16918262430485393797; bp[7] = tmp;
  tmp = 13728506818757698388; bp[8] = tmp;
  tmp = 13772906965603576095; bp[9] = tmp;
  tmp = 3156528908874584491; bp[10] = tmp;
  tmp = 1231154113365505725; bp[11] = tmp;
  tmp = 17718551243857757924; bp[12] = tmp;
  tmp = 16667871902385732453; bp[13] = tmp;
  tmp = 8054682061035653787; bp[14] = tmp;
  tmp = 12145378267626961546; bp[15] = tmp;
  tmp = 14175206944198899882; bp[16] = tmp;
  tmp = 1872412834642272634; bp[17] = tmp;
  tmp = 10293871819984421175; bp[18] = tmp;
  tmp = 8837694422794646872; bp[19] = tmp;
  tmp = 9711310516503218385; bp[20] = tmp;
  tmp = 6633261091277544380; bp[21] = tmp;
  tmp = 6086011487233213371; bp[22] = tmp;
  tmp = 14468328207451868826; bp[23] = tmp;
  tmp = 15312291203922875661; bp[24] = tmp;
  tmp = 10847478293144797667; bp[25] = tmp;
  tmp = 12824558171927804903; bp[26] = tmp;
  tmp = 7264247675481435729; bp[27] = tmp;
  tmp = 12023220503046567441; bp[28] = tmp;
  tmp = 5117160642964443543; bp[29] = tmp;
  tmp = 3958705157555305931; bp[30] = tmp;
  tmp = 0; bp[31] = tmp;
  tmp = 1; bp[32] = tmp;
  tmp = 0; bp[33] = tmp;
  tmp = 0; bp[34] = tmp;
  tmp = 0; bp[35] = tmp;
  tmp = 0; bp[36] = tmp;
  tmp = 0; bp[37] = tmp;
  tmp = 0; bp[38] = tmp;
  tmp = 0; bp[39] = tmp;
  tmp = 0; bp[40] = tmp;
  tmp = 0; bp[41] = tmp;
  tmp = 0; bp[42] = tmp;
  tmp = 0; bp[43] = tmp;
  tmp = 0; bp[44] = tmp;
  tmp = 0; bp[45] = tmp;
  tmp = 0; bp[46] = tmp;
  tmp = 0; bp[47] = tmp;
  tmp = 0; bp[48] = tmp;
  tmp = 0; bp[49] = tmp;
  tmp = 0; bp[50] = tmp;
  tmp = 0; bp[51] = tmp;
  tmp = 0; bp[52] = tmp;
  tmp = 0; bp[53] = tmp;
  tmp = 0; bp[54] = tmp;
  tmp = 0; bp[55] = tmp;
  tmp = 0; bp[56] = tmp;
  tmp = 0; bp[57] = tmp;
  tmp = 0; bp[58] = tmp;
  tmp = 0; bp[59] = tmp;
  tmp = 0; bp[60] = tmp;
  tmp = 0; bp[61] = tmp;
  tmp = 0; bp[62] = tmp;
  tmp = 0; bp[63] = tmp;
  return bp;
}

/* Loads the barret parameter for q.
It returns the value bq = 64634012142622014602181678901832151344149275788996660940618983229749210538517690858133235500877222994434345996511532432447522022956949065301949810946916763048696449966905068477685398111413057678633800146352718818246827478890795904469246368600920309340941974016824370058249168979203801341862243708796381209600585645755691914331308495038126020891376748587811031486075114014478461146180324831462628869870675303775441280529223778642704468966770683062741771456957485876259567868177395289055260056591233742761007071912728287420268308985532463664144989214686672011238215340377441016729836131352970677118652330074152466607306.
*/
inline fn bn_set_bq(stack u64[64] bq) -> stack u64[64] {
  reg u64 tmp;
  tmp = 10295868235056114890; bq[0] = tmp;
  tmp = 2368294145691358254; bq[1] = tmp;
  tmp = 14720334291626306557; bq[2] = tmp;
  tmp = 2984881376514770213; bq[3] = tmp;
  tmp = 1686921512324286912; bq[4] = tmp;
  tmp = 4231997920348793745; bq[5] = tmp;
  tmp = 9351739171860724641; bq[6] = tmp;
  tmp = 15389780787261235978; bq[7] = tmp;
  tmp = 9010269563805845161; bq[8] = tmp;
  tmp = 9099069857497600575; bq[9] = tmp;
  tmp = 6313057817749168983; bq[10] = tmp;
  tmp = 2462308226731011450; bq[11] = tmp;
  tmp = 16990358414005964232; bq[12] = tmp;
  tmp = 14888999731061913291; bq[13] = tmp;
  tmp = 16109364122071307575; bq[14] = tmp;
  tmp = 5844012461544371476; bq[15] = tmp;
  tmp = 9903669814688248149; bq[16] = tmp;
  tmp = 3744825669284545269; bq[17] = tmp;
  tmp = 2140999566259290734; bq[18] = tmp;
  tmp = 17675388845589293745; bq[19] = tmp;
  tmp = 975876959296885154; bq[20] = tmp;
  tmp = 13266522182555088761; bq[21] = tmp;
  tmp = 12172022974466426742; bq[22] = tmp;
  tmp = 10489912341194186036; bq[23] = tmp;
  tmp = 12177838334136199707; bq[24] = tmp;
  tmp = 3248212512580043719; bq[25] = tmp;
  tmp = 7202372270146058191; bq[26] = tmp;
  tmp = 14528495350962871459; bq[27] = tmp;
  tmp = 5599696932383583266; bq[28] = tmp;
  tmp = 10234321285928887087; bq[29] = tmp;
  tmp = 7917410315110611862; bq[30] = tmp;
  tmp = 0; bq[31] = tmp;
  tmp = 2; bq[32] = tmp;
  tmp = 0; bq[33] = tmp;
  tmp = 0; bq[34] = tmp;
  tmp = 0; bq[35] = tmp;
  tmp = 0; bq[36] = tmp;
  tmp = 0; bq[37] = tmp;
  tmp = 0; bq[38] = tmp;
  tmp = 0; bq[39] = tmp;
  tmp = 0; bq[40] = tmp;
  tmp = 0; bq[41] = tmp;
  tmp = 0; bq[42] = tmp;
  tmp = 0; bq[43] = tmp;
  tmp = 0; bq[44] = tmp;
  tmp = 0; bq[45] = tmp;
  tmp = 0; bq[46] = tmp;
  tmp = 0; bq[47] = tmp;
  tmp = 0; bq[48] = tmp;
  tmp = 0; bq[49] = tmp;
  tmp = 0; bq[50] = tmp;
  tmp = 0; bq[51] = tmp;
  tmp = 0; bq[52] = tmp;
  tmp = 0; bq[53] = tmp;
  tmp = 0; bq[54] = tmp;
  tmp = 0; bq[55] = tmp;
  tmp = 0; bq[56] = tmp;
  tmp = 0; bq[57] = tmp;
  tmp = 0; bq[58] = tmp;
  tmp = 0; bq[59] = tmp;
  tmp = 0; bq[60] = tmp;
  tmp = 0; bq[61] = tmp;
  tmp = 0; bq[62] = tmp;
  tmp = 0; bq[63] = tmp;
  return bq;
}

/* Loads the example witness.
It returns the value ex_w = 13562074942232698298179099715097584669743616762010001864533299997056731796296371039510377235748195022542024618898643826330807122904488341755722122148636711055263632491105526304501244287463084252119549757055178218173913102047978750988651708456497584278036673201887047222348131014704171051451256673650666629515213300997703806314646378361492063336814804438811067630413966929471013613663155038542386255423974557632334836982678865780618968772883384376382351839231415319749576574591601796022013741069051949170875806063999540180799183260929359622774470129812372649035895482951427131973688235088596275593114503240007521869714.
*/
inline fn bn_set_ex_w(stack u64[32] ex_w) -> stack u64[32] {
  reg u64 tmp;
  tmp = 16079707453520027538; ex_w[0] = tmp;
  tmp = 9896202453426434722; ex_w[1] = tmp;
  tmp = 9734514543779861232; ex_w[2] = tmp;
  tmp = 2720597558662080082; ex_w[3] = tmp;
  tmp = 5422305391744666469; ex_w[4] = tmp;
  tmp = 6284856943141827897; ex_w[5] = tmp;
  tmp = 3571931755504819832; ex_w[6] = tmp;
  tmp = 8898582908871733242; ex_w[7] = tmp;
  tmp = 1704218965307655612; ex_w[8] = tmp;
  tmp = 13955911167960165174; ex_w[9] = tmp;
  tmp = 1075360349327866006; ex_w[10] = tmp;
  tmp = 15655134966529348674; ex_w[11] = tmp;
  tmp = 13489896038793457581; ex_w[12] = tmp;
  tmp = 9091884461783532811; ex_w[13] = tmp;
  tmp = 14839329871522619038; ex_w[14] = tmp;
  tmp = 2391092563947328990; ex_w[15] = tmp;
  tmp = 8841078175838623648; ex_w[16] = tmp;
  tmp = 8090086859770744697; ex_w[17] = tmp;
  tmp = 9327323138639727608; ex_w[18] = tmp;
  tmp = 15359750175411445414; ex_w[19] = tmp;
  tmp = 174800848911598037; ex_w[20] = tmp;
  tmp = 9621397252429152621; ex_w[21] = tmp;
  tmp = 10251157532981205438; ex_w[22] = tmp;
  tmp = 10677669616094657323; ex_w[23] = tmp;
  tmp = 6940916673274726784; ex_w[24] = tmp;
  tmp = 16707030954547857917; ex_w[25] = tmp;
  tmp = 15997033023376387679; ex_w[26] = tmp;
  tmp = 1915269043270820409; ex_w[27] = tmp;
  tmp = 1075662976884682063; ex_w[28] = tmp;
  tmp = 4605192895173857279; ex_w[29] = tmp;
  tmp = 13724566221682937013; ex_w[30] = tmp;
  tmp = 7741315053003204029; ex_w[31] = tmp;
  return ex_w;
}

/* Loads the example statement.
It returns the value ex_s = 17448105564697743235596200779905060886140102301589836974870836993584491604725980549786805891101128905392483202643612799832388966813381742461470387725541672947131967359215271192071104242818534618159207393267571342157931998220631680702975123830881219215736803556617335999518588338804520261434697814567055925964501568025260046973303129822355476335079189622119622697775023077959076699091477716959124081583302657743773751866109946017718536963183669118715561381915446592752262392261234321714414999399944719644372451141711218530146601499574810057491831816916583316009757172316828411111743676667730848241028554193006466552845.
*/
inline fn bn_set_ex_s(stack u64[32] ex_s) -> stack u64[32] {
  reg u64 tmp;
  tmp = 7171969242160550925; ex_s[0] = tmp;
  tmp = 8804781220001203743; ex_s[1] = tmp;
  tmp = 14594497754230940608; ex_s[2] = tmp;
  tmp = 1472392515548218179; ex_s[3] = tmp;
  tmp = 4948236216193327450; ex_s[4] = tmp;
  tmp = 1031462267516433719; ex_s[5] = tmp;
  tmp = 4797027940007565550; ex_s[6] = tmp;
  tmp = 16764487674120473874; ex_s[7] = tmp;
  tmp = 5584558119897651268; ex_s[8] = tmp;
  tmp = 12193031863899618817; ex_s[9] = tmp;
  tmp = 4105145217697908108; ex_s[10] = tmp;
  tmp = 17298484718723899587; ex_s[11] = tmp;
  tmp = 14003085206563225236; ex_s[12] = tmp;
  tmp = 967507600631665215; ex_s[13] = tmp;
  tmp = 6159932005602028579; ex_s[14] = tmp;
  tmp = 17632204334305376028; ex_s[15] = tmp;
  tmp = 17465986506102992472; ex_s[16] = tmp;
  tmp = 8949836227897206741; ex_s[17] = tmp;
  tmp = 16842327390758156857; ex_s[18] = tmp;
  tmp = 12801704344442488385; ex_s[19] = tmp;
  tmp = 1566856634118248884; ex_s[20] = tmp;
  tmp = 11454838073351799762; ex_s[21] = tmp;
  tmp = 12515412700129796283; ex_s[22] = tmp;
  tmp = 11738035997661530147; ex_s[23] = tmp;
  tmp = 6509515618992112762; ex_s[24] = tmp;
  tmp = 4087076476951562775; ex_s[25] = tmp;
  tmp = 2349864693353382499; ex_s[26] = tmp;
  tmp = 15578039638568120178; ex_s[27] = tmp;
  tmp = 15424853839367417309; ex_s[28] = tmp;
  tmp = 3385351981655818438; ex_s[29] = tmp;
  tmp = 1357657197262854114; ex_s[30] = tmp;
  tmp = 9959485021998196103; ex_s[31] = tmp;
  return ex_s;
}
