/* This file is autogenerated by constants.py */

/* Loads the modulus. This function has the property (expressed as an Easycrypt lemma):

   op p : int = 32317006071311007300338913926423828248817941241140239112842009751400741706634354222619689417363569347117901737909704191754605873209195028853758986185622153212175412514901774520270235796078236248884246189477587641105928646099411723245426622522193230540919037680524235519125679715870117001058055877651038861847280257976054903569732561526167081339361799541336476559160368317896729073178384589680639671900977202194168647225871031411336429319536193471636533209717077448227988588565369208645296636077250268955505928362751121174096972998068410554359584866583291642136218231078990999448652468262416972035911852507045361090559.
   lemma bn_set_p_correct: phoare [ bn_set_p : true ==> W64xN.valR res = p ] = 1%r.
*/
inline fn bn_set_p(stack u64[32] p) -> stack u64[32] {
  p[0] = -9223372036854710273;
  p[1] = -9223372036854710273;
  p[2] = -9223372036854732184;
  p[3] = -9223372036854739366;
  p[4] = -9223372036854774512;
  p[5] = -9223372036854766056;
  p[6] = -9223372036854748443;
  p[7] = -9223372036854756996;
  p[8] = -9223372036854769896;
  p[9] = -9223372036854723594;
  p[10] = -9223372036854754615;
  p[11] = -9223372036854751760;
  p[12] = -9223372036854734193;
  p[13] = -9223372036854742110;
  p[14] = -9223372036854741501;
  p[15] = -9223372036854745300;
  p[16] = -9223372036854723013;
  p[17] = -9223372036854751674;
  p[18] = -9223372036854767236;
  p[19] = -9223372036854748152;
  p[20] = -9223372036854736892;
  p[21] = -9223372036854762162;
  p[22] = -9223372036854737299;
  p[23] = -9223372036854765305;
  p[24] = -9223372036854754629;
  p[25] = -9223372036854713514;
  p[26] = -9223372036854731370;
  p[27] = -9223372036854751965;
  p[28] = -9223372036854722721;
  p[29] = -9223372036854759512;
  p[30] = -9223372036854721638;
  p[31] = -9223372036854757322;
  p[32] = -9223372036854726907;
  p[33] = -9223372036854743880;
  p[34] = -9223372036854752451;
  p[35] = -9223372036854749615;
  p[36] = -9223372036854767642;
  p[37] = -9223372036854766575;
  p[38] = -9223372036854734939;
  p[39] = -9223372036854748165;
  p[40] = -9223372036854728723;
  p[41] = -9223372036854752074;
  p[42] = -9223372036854715029;
  p[43] = -9223372036854758679;
  p[44] = -9223372036854743354;
  p[45] = -9223372036854729354;
  p[46] = -9223372036854726075;
  p[47] = -9223372036854762131;
  p[48] = -9223372036854770633;
  p[49] = -9223372036854773139;
  p[50] = -9223372036854758629;
  p[51] = -9223372036854769229;
  p[52] = -9223372036854774563;
  p[53] = -9223372036854773639;
  p[54] = -9223372036854736094;
  p[55] = -9223372036854727002;
  p[56] = -9223372036854723468;
  p[57] = -9223372036854755832;
  p[58] = -9223372036854768431;
  p[59] = -9223372036854750581;
  p[60] = -9223372036854726092;
  p[61] = -9223372036854719838;
  p[62] = -9223372036854710273;
  p[63] = -9223372036854710273;
  return p;
}

/* Loads the order of the generator. This function has the property (expressed as an Easycrypt lemma):

   op q : int = 16158503035655503650169456963211914124408970620570119556421004875700370853317177111309844708681784673558950868954852095877302936604597514426879493092811076606087706257450887260135117898039118124442123094738793820552964323049705861622713311261096615270459518840262117759562839857935058500529027938825519430923640128988027451784866280763083540669680899770668238279580184158948364536589192294840319835950488601097084323612935515705668214659768096735818266604858538724113994294282684604322648318038625134477752964181375560587048486499034205277179792433291645821068109115539495499724326234131208486017955926253522680545279.
   lemma bn_set_q_correct: phoare [ bn_set_q : true ==> W64xN.valR res = q ] = 1%r.
*/
inline fn bn_set_q(stack u64[32] q) -> stack u64[32] {
  q[0] = -9223372036854710273;
  q[1] = -9223372036854710273;
  q[2] = -9223372036854753996;
  q[3] = -9223372036854757587;
  q[4] = -9223372036854775160;
  q[5] = -9223372036854770932;
  q[6] = -9223372036854729358;
  q[7] = -9223372036854733634;
  q[8] = -9223372036854772852;
  q[9] = -9223372036854716933;
  q[10] = -9223372036854765212;
  q[11] = -9223372036854731016;
  q[12] = -9223372036854722233;
  q[13] = -9223372036854726191;
  q[14] = -9223372036854758655;
  q[15] = -9223372036854760554;
  q[16] = -9223372036854749411;
  q[17] = -9223372036854763741;
  q[18] = -9223372036854771522;
  q[19] = -9223372036854761980;
  q[20] = -9223372036854756350;
  q[21] = -9223372036854768985;
  q[22] = -9223372036854756554;
  q[23] = -9223372036854737789;
  q[24] = -9223372036854732451;
  q[25] = -9223372036854744661;
  q[26] = -9223372036854720821;
  q[27] = -9223372036854731119;
  q[28] = -9223372036854749265;
  q[29] = -9223372036854767660;
  q[30] = -9223372036854715955;
  q[31] = -9223372036854766565;
  q[32] = -9223372036854718590;
  q[33] = -9223372036854759844;
  q[34] = -9223372036854764130;
  q[35] = -9223372036854762712;
  q[36] = -9223372036854738957;
  q[37] = -9223372036854738424;
  q[38] = -9223372036854722606;
  q[39] = -9223372036854761987;
  q[40] = -9223372036854752266;
  q[41] = -9223372036854731173;
  q[42] = -9223372036854712651;
  q[43] = -9223372036854767244;
  q[44] = -9223372036854759581;
  q[45] = -9223372036854719813;
  q[46] = -9223372036854718174;
  q[47] = -9223372036854736202;
  q[48] = -9223372036854740453;
  q[49] = -9223372036854741706;
  q[50] = -9223372036854767219;
  q[51] = -9223372036854739751;
  q[52] = -9223372036854775186;
  q[53] = -9223372036854774724;
  q[54] = -9223372036854723183;
  q[55] = -9223372036854718637;
  q[56] = -9223372036854716870;
  q[57] = -9223372036854765820;
  q[58] = -9223372036854772120;
  q[59] = -9223372036854763195;
  q[60] = -9223372036854750950;
  q[61] = -9223372036854715055;
  q[62] = -9223372036854710273;
  q[63] = -9223372036854710273;
  return q;
}

/* Loads the generator. This function has the property (expressed as an Easycrypt lemma):

   op g : int = 2.
   lemma bn_set_g_correct: phoare [ bn_set_g : true ==> W64xN.valR res = g ] = 1%r.
*/
inline fn bn_set_g(stack u64[32] g) -> stack u64[32] {
  g[0] = -9223372036854775806;
  g[1] = -9223372036854775808;
  g[2] = -9223372036854775808;
  g[3] = -9223372036854775808;
  g[4] = -9223372036854775808;
  g[5] = -9223372036854775808;
  g[6] = -9223372036854775808;
  g[7] = -9223372036854775808;
  g[8] = -9223372036854775808;
  g[9] = -9223372036854775808;
  g[10] = -9223372036854775808;
  g[11] = -9223372036854775808;
  g[12] = -9223372036854775808;
  g[13] = -9223372036854775808;
  g[14] = -9223372036854775808;
  g[15] = -9223372036854775808;
  g[16] = -9223372036854775808;
  g[17] = -9223372036854775808;
  g[18] = -9223372036854775808;
  g[19] = -9223372036854775808;
  g[20] = -9223372036854775808;
  g[21] = -9223372036854775808;
  g[22] = -9223372036854775808;
  g[23] = -9223372036854775808;
  g[24] = -9223372036854775808;
  g[25] = -9223372036854775808;
  g[26] = -9223372036854775808;
  g[27] = -9223372036854775808;
  g[28] = -9223372036854775808;
  g[29] = -9223372036854775808;
  g[30] = -9223372036854775808;
  g[31] = -9223372036854775808;
  g[32] = -9223372036854775808;
  g[33] = -9223372036854775808;
  g[34] = -9223372036854775808;
  g[35] = -9223372036854775808;
  g[36] = -9223372036854775808;
  g[37] = -9223372036854775808;
  g[38] = -9223372036854775808;
  g[39] = -9223372036854775808;
  g[40] = -9223372036854775808;
  g[41] = -9223372036854775808;
  g[42] = -9223372036854775808;
  g[43] = -9223372036854775808;
  g[44] = -9223372036854775808;
  g[45] = -9223372036854775808;
  g[46] = -9223372036854775808;
  g[47] = -9223372036854775808;
  g[48] = -9223372036854775808;
  g[49] = -9223372036854775808;
  g[50] = -9223372036854775808;
  g[51] = -9223372036854775808;
  g[52] = -9223372036854775808;
  g[53] = -9223372036854775808;
  g[54] = -9223372036854775808;
  g[55] = -9223372036854775808;
  g[56] = -9223372036854775808;
  g[57] = -9223372036854775808;
  g[58] = -9223372036854775808;
  g[59] = -9223372036854775808;
  g[60] = -9223372036854775808;
  g[61] = -9223372036854775808;
  g[62] = -9223372036854775808;
  g[63] = -9223372036854775808;
  return g;
}

/* Loads the barret parameter for p. This function has the property (expressed as an Easycrypt lemma):

   op bp : int = 32317006071311007301090839450916075672074637894498330470309491614874605269258845429066617750438611497217172998255766216223761011478474532650974905473458381524348224983452534238842699055706528839316900073176359409123413739445397952234623184300460154670470987008412185029124584489601900670931121854398190604800292822877845957165654247519063010445688374293905515743037557007239230573090162415731314434935337651887720640264611889321352234483385341531370885728478742938129783934088697644527630028295616871380503535956364143710134154492766231832072494607343336005619107670188720508364918065676485338559326165037076233303652.
   lemma bn_set_bp_correct: phoare [ bn_set_bp : true ==> W64x2N.valR res = bp ] = 1%r.
*/
inline fn bn_set_bp(stack u64[64] bp) -> stack u64[64] {
  bp[0] = -9223372036854729116;
  bp[1] = -9223372036854766898;
  bp[2] = -9223372036854773225;
  bp[3] = -9223372036854714499;
  bp[4] = -9223372036854737410;
  bp[5] = -9223372036854738683;
  bp[6] = -9223372036854725998;
  bp[7] = -9223372036854761754;
  bp[8] = -9223372036854717216;
  bp[9] = -9223372036854738154;
  bp[10] = -9223372036854745656;
  bp[11] = -9223372036854740521;
  bp[12] = -9223372036854735408;
  bp[13] = -9223372036854774115;
  bp[14] = -9223372036854763131;
  bp[15] = -9223372036854727157;
  bp[16] = -9223372036854733996;
  bp[17] = -9223372036854746057;
  bp[18] = -9223372036854716129;
  bp[19] = -9223372036854763031;
  bp[20] = -9223372036854738517;
  bp[21] = -9223372036854759855;
  bp[22] = -9223372036854745411;
  bp[23] = -9223372036854714332;
  bp[24] = -9223372036854741276;
  bp[25] = -9223372036854714246;
  bp[26] = -9223372036854744219;
  bp[27] = -9223372036854764241;
  bp[28] = -9223372036854723941;
  bp[29] = -9223372036854711640;
  bp[30] = -9223372036854744438;
  bp[31] = -9223372036854772433;
  bp[32] = -9223372036854761302;
  bp[33] = -9223372036854746212;
  bp[34] = -9223372036854767238;
  bp[35] = -9223372036854766195;
  bp[36] = -9223372036854759113;
  bp[37] = -9223372036854764063;
  bp[38] = -9223372036854762152;
  bp[39] = -9223372036854723520;
  bp[40] = -9223372036854740783;
  bp[41] = -9223372036854742666;
  bp[42] = -9223372036854735940;
  bp[43] = -9223372036854770735;
  bp[44] = -9223372036854742085;
  bp[45] = -9223372036854719693;
  bp[46] = -9223372036854722918;
  bp[47] = -9223372036854721575;
  bp[48] = -9223372036854754035;
  bp[49] = -9223372036854763592;
  bp[50] = -9223372036854775325;
  bp[51] = -9223372036854711287;
  bp[52] = -9223372036854711321;
  bp[53] = -9223372036854711371;
  bp[54] = -9223372036854763951;
  bp[55] = -9223372036854723899;
  bp[56] = -9223372036854729199;
  bp[57] = -9223372036854771880;
  bp[58] = -9223372036854754921;
  bp[59] = -9223372036854722946;
  bp[60] = -9223372036854759989;
  bp[61] = -9223372036854766243;
  bp[62] = -9223372036854775808;
  bp[63] = -9223372036854775808;
  bp[64] = -9223372036854775807;
  bp[65] = -9223372036854775808;
  bp[66] = -9223372036854775808;
  bp[67] = -9223372036854775808;
  bp[68] = -9223372036854775808;
  bp[69] = -9223372036854775808;
  bp[70] = -9223372036854775808;
  bp[71] = -9223372036854775808;
  bp[72] = -9223372036854775808;
  bp[73] = -9223372036854775808;
  bp[74] = -9223372036854775808;
  bp[75] = -9223372036854775808;
  bp[76] = -9223372036854775808;
  bp[77] = -9223372036854775808;
  bp[78] = -9223372036854775808;
  bp[79] = -9223372036854775808;
  bp[80] = -9223372036854775808;
  bp[81] = -9223372036854775808;
  bp[82] = -9223372036854775808;
  bp[83] = -9223372036854775808;
  bp[84] = -9223372036854775808;
  bp[85] = -9223372036854775808;
  bp[86] = -9223372036854775808;
  bp[87] = -9223372036854775808;
  bp[88] = -9223372036854775808;
  bp[89] = -9223372036854775808;
  bp[90] = -9223372036854775808;
  bp[91] = -9223372036854775808;
  bp[92] = -9223372036854775808;
  bp[93] = -9223372036854775808;
  bp[94] = -9223372036854775808;
  bp[95] = -9223372036854775808;
  bp[96] = -9223372036854775808;
  bp[97] = -9223372036854775808;
  bp[98] = -9223372036854775808;
  bp[99] = -9223372036854775808;
  bp[100] = -9223372036854775808;
  bp[101] = -9223372036854775808;
  bp[102] = -9223372036854775808;
  bp[103] = -9223372036854775808;
  bp[104] = -9223372036854775808;
  bp[105] = -9223372036854775808;
  bp[106] = -9223372036854775808;
  bp[107] = -9223372036854775808;
  bp[108] = -9223372036854775808;
  bp[109] = -9223372036854775808;
  bp[110] = -9223372036854775808;
  bp[111] = -9223372036854775808;
  bp[112] = -9223372036854775808;
  bp[113] = -9223372036854775808;
  bp[114] = -9223372036854775808;
  bp[115] = -9223372036854775808;
  bp[116] = -9223372036854775808;
  bp[117] = -9223372036854775808;
  bp[118] = -9223372036854775808;
  bp[119] = -9223372036854775808;
  bp[120] = -9223372036854775808;
  bp[121] = -9223372036854775808;
  bp[122] = -9223372036854775808;
  bp[123] = -9223372036854775808;
  bp[124] = -9223372036854775808;
  bp[125] = -9223372036854775808;
  bp[126] = -9223372036854775808;
  bp[127] = -9223372036854775808;
  return bp;
}

/* Loads the barret parameter for q. This function has the property (expressed as an Easycrypt lemma):

   op bq : int = 64634012142622014602181678901832151344149275788996660940618983229749210538517690858133235500877222994434345996511532432447522022956949065301949810946916763048696449966905068477685398111413057678633800146352718818246827478890795904469246368600920309340941974016824370058249168979203801341862243708796381209600585645755691914331308495038126020891376748587811031486075114014478461146180324831462628869870675303775441280529223778642704468966770683062741771456957485876259567868177395289055260056591233742761007071912728287420268308985532463664144989214686672011238215340377441016729836131352970677118652330074152466607306.
   lemma bn_set_bq_correct: phoare [ bn_set_bq : true ==> W64x2N.valR res = bq ] = 1%r.
*/
inline fn bn_set_bq(stack u64[64] bq) -> stack u64[64] {
  bq[0] = -9223372036854747958;
  bq[1] = -9223372036854757988;
  bq[2] = -9223372036854770642;
  bq[3] = -9223372036854718726;
  bq[4] = -9223372036854764547;
  bq[5] = -9223372036854767093;
  bq[6] = -9223372036854741723;
  bq[7] = -9223372036854747700;
  bq[8] = -9223372036854724160;
  bq[9] = -9223372036854766035;
  bq[10] = -9223372036854715503;
  bq[11] = -9223372036854770769;
  bq[12] = -9223372036854760543;
  bq[13] = -9223372036854772422;
  bq[14] = -9223372036854750454;
  bq[15] = -9223372036854744042;
  bq[16] = -9223372036854757719;
  bq[17] = -9223372036854716306;
  bq[18] = -9223372036854721985;
  bq[19] = -9223372036854750253;
  bq[20] = -9223372036854766761;
  bq[21] = -9223372036854743901;
  bq[22] = -9223372036854715014;
  bq[23] = -9223372036854718391;
  bq[24] = -9223372036854772280;
  bq[25] = -9223372036854718219;
  bq[26] = -9223372036854712629;
  bq[27] = -9223372036854752674;
  bq[28] = -9223372036854737609;
  bq[29] = -9223372036854713007;
  bq[30] = -9223372036854713068;
  bq[31] = -9223372036854769058;
  bq[32] = -9223372036854746795;
  bq[33] = -9223372036854716615;
  bq[34] = -9223372036854758667;
  bq[35] = -9223372036854756582;
  bq[36] = -9223372036854742418;
  bq[37] = -9223372036854752317;
  bq[38] = -9223372036854748495;
  bq[39] = -9223372036854736767;
  bq[40] = -9223372036854771294;
  bq[41] = -9223372036854775060;
  bq[42] = -9223372036854761607;
  bq[43] = -9223372036854765662;
  bq[44] = -9223372036854773898;
  bq[45] = -9223372036854729113;
  bq[46] = -9223372036854735564;
  bq[47] = -9223372036854732878;
  bq[48] = -9223372036854732261;
  bq[49] = -9223372036854751375;
  bq[50] = -9223372036854774841;
  bq[51] = -9223372036854712302;
  bq[52] = -9223372036854712369;
  bq[53] = -9223372036854712469;
  bq[54] = -9223372036854752093;
  bq[55] = -9223372036854737525;
  bq[56] = -9223372036854748126;
  bq[57] = -9223372036854767951;
  bq[58] = -9223372036854734033;
  bq[59] = -9223372036854735620;
  bq[60] = -9223372036854744170;
  bq[61] = -9223372036854756677;
  bq[62] = -9223372036854775808;
  bq[63] = -9223372036854775808;
  bq[64] = -9223372036854775806;
  bq[65] = -9223372036854775808;
  bq[66] = -9223372036854775808;
  bq[67] = -9223372036854775808;
  bq[68] = -9223372036854775808;
  bq[69] = -9223372036854775808;
  bq[70] = -9223372036854775808;
  bq[71] = -9223372036854775808;
  bq[72] = -9223372036854775808;
  bq[73] = -9223372036854775808;
  bq[74] = -9223372036854775808;
  bq[75] = -9223372036854775808;
  bq[76] = -9223372036854775808;
  bq[77] = -9223372036854775808;
  bq[78] = -9223372036854775808;
  bq[79] = -9223372036854775808;
  bq[80] = -9223372036854775808;
  bq[81] = -9223372036854775808;
  bq[82] = -9223372036854775808;
  bq[83] = -9223372036854775808;
  bq[84] = -9223372036854775808;
  bq[85] = -9223372036854775808;
  bq[86] = -9223372036854775808;
  bq[87] = -9223372036854775808;
  bq[88] = -9223372036854775808;
  bq[89] = -9223372036854775808;
  bq[90] = -9223372036854775808;
  bq[91] = -9223372036854775808;
  bq[92] = -9223372036854775808;
  bq[93] = -9223372036854775808;
  bq[94] = -9223372036854775808;
  bq[95] = -9223372036854775808;
  bq[96] = -9223372036854775808;
  bq[97] = -9223372036854775808;
  bq[98] = -9223372036854775808;
  bq[99] = -9223372036854775808;
  bq[100] = -9223372036854775808;
  bq[101] = -9223372036854775808;
  bq[102] = -9223372036854775808;
  bq[103] = -9223372036854775808;
  bq[104] = -9223372036854775808;
  bq[105] = -9223372036854775808;
  bq[106] = -9223372036854775808;
  bq[107] = -9223372036854775808;
  bq[108] = -9223372036854775808;
  bq[109] = -9223372036854775808;
  bq[110] = -9223372036854775808;
  bq[111] = -9223372036854775808;
  bq[112] = -9223372036854775808;
  bq[113] = -9223372036854775808;
  bq[114] = -9223372036854775808;
  bq[115] = -9223372036854775808;
  bq[116] = -9223372036854775808;
  bq[117] = -9223372036854775808;
  bq[118] = -9223372036854775808;
  bq[119] = -9223372036854775808;
  bq[120] = -9223372036854775808;
  bq[121] = -9223372036854775808;
  bq[122] = -9223372036854775808;
  bq[123] = -9223372036854775808;
  bq[124] = -9223372036854775808;
  bq[125] = -9223372036854775808;
  bq[126] = -9223372036854775808;
  bq[127] = -9223372036854775808;
  return bq;
}
